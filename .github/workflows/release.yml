name: Client Release

# Needed so the release job can publish assets
permissions:
  contents: write     # allows creating & uploading releases

on:
  push:
    tags: [ "v*" ]

jobs:
  build:
    name: Build Client (${{ matrix.os }} â€¢ ${{ matrix.target }})
    strategy:
      matrix:
        include:
          - { os: ubuntu-22.04, os_short: "linux", target: x86_64-unknown-linux-gnu, arch: "x64", exe: ""     }
          - { os: windows-latest, os_short: "win",  target: x86_64-pc-windows-msvc  , arch: "x64", exe: ".exe" }
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    # ----------------------------------
    # Install protoc everywhere (one step, cross-platform)
    # ----------------------------------
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Client
      run: cargo build -p gsh --release --target ${{ matrix.target }}

    - name: Derive version
      id: vars
      shell: bash
      run: echo "VERSION=${GITHUB_REF_NAME#v}" >>"$GITHUB_ENV"

    - name: Copy binary with release filename
      shell: bash
      run: |
        RELEASE_FILE="gsh-${VERSION}-${{ matrix.arch }}-${{ matrix.os_short }}${{ matrix.exe }}"
        cp target/${{ matrix.target }}/release/gsh${{ matrix.exe }} "$RELEASE_FILE"
        echo "RELEASE_FILE=$RELEASE_FILE" >>"$GITHUB_ENV"

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RELEASE_FILE }}
        path: ${{ env.RELEASE_FILE }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions: { contents: write }

    steps:
    - uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: "Client Release ${{ github.ref_name }}"
        draft: false
        prerelease: false
        files: dist/*
